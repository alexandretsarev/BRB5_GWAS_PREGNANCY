View(df1)
df %>% dplyr::select(PVAL,REF, RSID,ALT, CHR,COORDINATE,Mapped_gene,Reported_trait,REGION) -> df1
View(df1)
df %>% dplyr::select(PVAL,REF, RSID,ALT, CHR,COORDINATE,Mapped_gene,Reported_trait) -> df1
df %>% dplyr::select(PVAL,REF, RSID,ALT, CHR,COORDINATE,Mapped_gene,Reported_trait,Study_accession) -> df1
View(df1)
colnames(df1)
df %>% dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) -> df1
colnames(df1)
View(df1)
View(rep_gwas_snp)
rep_gwas_snp
# Task - working with repeated between the phenotypes SNPs
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(RSID = Var1)
df <- subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$RSID)
head(rep_gwas_snp)
df %>% dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) -> df1
df1 <- plyr::join(df1,rep_gwas_snp)
View(df1)
df1 <- plyr::join(df1,rep_gwas_snp,type="left")
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(RSID = Var1)
df <- subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$RSID)
head(rep_gwas_snp)
df %>% dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) -> df1
df1 <- plyr::join(df1,rep_gwas_snp,type="left")
View(df1)
View(rep_gwas_snp)
rep_gwas_snp
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(RSID = Var1)
df <- subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$RSID)
head(rep_gwas_snp)
df %>% dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) -> df1
df2 <- plyr::join(df1,rep_gwas_snp,type="left")
View(df2)
View(rep_gwas_snp)
# Task - working with repeated between the phenotypes SNPs
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
df <- subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP)
head(rep_gwas_snp)
df %>% dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) -> df1
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
df <- subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP)
head(rep_gwas_snp)
df %>% dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) -> df1
df2 <- plyr::join(df1,rep_gwas_snp)
View(df2)
df2 <- plyr::join(df1,rep_gwas_snp[,-1])
View(df2)
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
df <- subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP)
head(rep_gwas_snp)
df %>% dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) -> df1
df2 <- plyr::join(df1,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times = Freq)
View(df2)
rm(df2)
# Task - working with repeated between the phenotypes SNPs
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
df <- subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) -> df
df <- plyr::join(df,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times = Freq)
head(df)
View(df)
# Task - working with repeated between the phenotypes SNPs
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
df <- subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times = Freq)
head(df)
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
df <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times = Freq)
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
rep_gwas_snp <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times = Freq)
rm(df,df1)
View(rep_gwas_snp)
rep_gwas_snp <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times_in_GwasCat = Freq)
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
rep_gwas_snp <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times_in_GwasCat = Freq)
View(gwas_catalog)
View(rep_gwas_snp)
getwd()
table(rep_gwas_snp$RSID)
rep_gwas_snp <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times_in_GwasCat = Freq) %>%
dplyr::arrange(-RSID)
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
rep_gwas_snp <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times_in_GwasCat = Freq) %>%
dplyr::arrange(-RSID)
rep_gwas_snp <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times_in_GwasCat = Freq) %>%
dplyr::arrange(RSID)
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
rep_gwas_snp <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times_in_GwasCat = Freq) %>%
dplyr::arrange(RSID)
View(rep_gwas_snp)
write.csv(rep_gwas_snp,"~/Documents/Bioinf/Git_BRB5/publication/repeated_GWAS_long_table.csv",row.names = F)
View(rep_gwas_snp)
library(kableExtra)
dt <- data.frame(a = c(1, 1, 2, 2), b = c("a", "a", "a", "b"))
x <- knitr::kable(dt, "html")
collapse_rows(x)
rep_gwas_snp %>% dplyr::group_by()
rep_gwas_snp %>%
dplyr::group_by(RSID)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>% nrow(.)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>% count(.)
set.seed(6)
df=data.frame(
x=c("sp1","sp2","sp3","sp3","sp4","sp2","sp3"),
y=rpois(7,2)); df
View(dt)
View(df)
ddply(df,"x",numcolwise(sum))
ddply(df,"x",plyr::numcolwise(sum))
rm(df,dt)
rm(x)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait2 = paste(Reported_trait, collapse = ", ")) -> df
View(df)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait2 = paste(Reported_trait, collapse = ", ")) %>%
dplyr::select(2)-> rep_gwas_snp$Reported_trait2
View(rep_gwas_snp)
View(df)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait2 = paste(Reported_trait, collapse = ", ")) %>%
dplyr::select(Reported_trait2)-> rep_gwas_snp$Reported_trait2
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait2 = as.character(paste(Reported_trait, collapse = ", "))) %>%
dplyr::select(Reported_trait2)-> rep_gwas_snp$Reported_trait3
View(df)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait2 = as.character(paste(Reported_trait, collapse = ", "))) -> df
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait2 = paste(Reported_trait, collapse = ", "),
Reported_trait3 = paste(rep_gwas_snp$Study_accession, collapse = ", ")) -> df
View(df)
View(df)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait2 = paste(unique(Reported_trait), collapse = ", "),
Reported_trait3 = paste(unique(Study_accession), collapse = ", ")) -> df
View(df)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait = paste(unique(Reported_trait), collapse = ", "),
Study_accession = paste(unique(Study_accession), collapse = ", ")) -> df
View(df)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait = paste(unique(Reported_trait), collapse = ", "),
Study_accession = paste(unique(Study_accession), collapse = ", ")) -> collapsed_rep
rm(df)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait = paste(unique(Reported_trait), collapse = ", "),
Study_accession = paste(unique(Study_accession), collapse = ", ")) -> collapsed_rep
View(gwas_catalog_filtered)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait = paste(unique(Reported_trait), collapse = ", "),
Study_accession = paste(unique(Study_accession), collapse = ", ")) -> collapsed_rep
View(collapsed_rep)
View(gwas_catalog_filtered)
View(rep_gwas_snp)
rep_gwas_snp_dedup <- rep_gwas_snp[!duplicated(rep_gwas_snp[c(1)]),]
rep_gwas_snp_dedup <- plyr::join(rep_gwas_snp_dedup,collapsed_rep)
View(rep_gwas_snp_dedup)
View(rep_gwas_snp_dedup)
View(collapsed_rep)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait = paste(unique(Reported_trait), collapse = ", "),
Study_accession = paste(unique(Study_accession), collapse = ", ")) -> collapsed_rep
rep_gwas_snp_dedup <- rep_gwas_snp[!duplicated(rep_gwas_snp[c(1)]),]
View(rep_gwas_snp_dedup)
rep_gwas_snp_dedup <- rep_gwas_snp[!duplicated(rep_gwas_snp[c(1)]),][,-c(8,9)]
View(rep_gwas_snp_dedup)
rep_gwas_snp_dedup <- plyr::join(rep_gwas_snp_dedup,collapsed_rep)
View(rep_gwas_snp_dedup)
write.csv(rep_gwas_snp_dedup,"~/Documents/Bioinf/Git_BRB5/publication/repeated_GWAS_short_table.csv",row.names = F)
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
rep_gwas_snp <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times_in_GwasCat = Freq) %>%
dplyr::arrange(RSID) %>%
filter(PVAL < 1e-07)
# printing long table - no collapsing between repeats
write.csv(rep_gwas_snp,"~/Documents/Bioinf/Git_BRB5/publication/repeated_GWAS_long_table.csv",row.names = F)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait = paste(unique(Reported_trait), collapse = ", "),
Study_accession = paste(unique(Study_accession), collapse = ", ")) -> collapsed_rep
rep_gwas_snp_dedup <- rep_gwas_snp[!duplicated(rep_gwas_snp[c(1)]),][,-c(8,9)]
rep_gwas_snp_dedup <- plyr::join(rep_gwas_snp_dedup,collapsed_rep)
write.csv(rep_gwas_snp_dedup,"~/Documents/Bioinf/Git_BRB5/publication/repeated_GWAS_short_table.csv",row.names = F)
View(rep_gwas_snp_dedup)
uk_biobank <- read_excel("UKBB GWAS Imputed v3 - File Manifest Release 20180731.xlsx",
sheet = 2,na = "N/A",col_names = T)
# removing all stuff which is not from imputed.v3
uk_biobank_v3 <- subset(uk_biobank,grepl(uk_biobank$File,pattern="imputed.v3") & uk_biobank$Sex == "female")
# I digged in uk biobank and found phenotypes.female.tsv
# there are some phenotypes which could be grepped (patterns related to pregnancy problems)
phenotype_fem <- read.delim("phenotypes.female.tsv")
# ????
preg_phen <- read.table("data/my_data.txt",header = F)
preg_phen$`Phenotype Code` <- gsub(preg_phen$V9,pattern = "\\..*",replacement="")
colnames(preg_phen)[9] <- "file"
preg_phen <- plyr::join(preg_phen[,-c(1:8)], uk_biobank_v3[,c(1,2,6)],type="inner")
rm(uk_biobank,uk_biobank_v3,phenotype_fem)
#
preg_phen <- read.table("preg_phen_snp_lGC.tsv",header = T,sep = "\t")
plot1 <- ggplot(preg_phen, aes(Phenotype_Code,lambdaGC))+
geom_point(aes(size=as.numeric(preg_phen$log10_P7),description = Phenotype_Description, snp = log10_P7),col=brewer.pal(7,"Dark2")[1],alpha=0.9)+
ylab("Genomic inflation factor")+
xlab("Phenotype code")+
labs(size="Number of significant \nSNP (1-e07)")+
geom_hline(yintercept = 1)+ylim(limits = c(0.9,1.2))+
theme_bw()+
theme(axis.text.x = element_text(hjust = 1,angle = 45,size = 10,face = "plain"))+
scale_size_continuous(range = c(1.5,8))+ylim(NA,1.05)
plot1
View(preg_phen)
#
total <- read.csv("total_ukbiobank_pregn.csv")
View(total)
#
total <- read.csv("total_ukbiobank_pregn.csv")
View(total)
#
total <- read.csv("total_ukbiobank_pregn.csv",row.names = F)
#
total <- read.csv("total_ukbiobank_pregn.csv")
View(total)
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
View(table(total$variant))
View(total)
# Task - working with repeated between the phenotypes SNPs
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
gwas_catalog <- read_excel("gwas_catalog_annotated.xlsx")
gwas_catalog$Location <- gsub(gwas_catalog$Location,pattern="X",replacement = "23") # change name of Х-chromosome to 23
gwas_catalog$REF <- gwas_catalog$REF_man_corr
gwas_catalog$REF <- ifelse(is.na(gwas_catalog$REF),
as.character(as.data.frame(str_split_fixed(gwas_catalog$NUC_EXCHANGE,pattern = "/",Inf))[,1]),
gwas_catalog$REF)
gwas_catalog$ALT <- gwas_catalog$ALT_man_corr
gwas_catalog$ALT <- ifelse(is.na(gwas_catalog$ALT) & gwas_catalog$NUC_EXCHANGE!='no_data' ,
as.character(as.data.frame(str_split_fixed(gwas_catalog$NUC_EXCHANGE,pattern = "/",Inf))[,2]),
gwas_catalog$ALT)
gwas_catalog$ALT <- ifelse(grepl(gwas_catalog$ALT,pattern='/'),
as.character(as.data.frame(str_split_fixed(gwas_catalog$ALT,pattern = "/",Inf))[,2]),
gwas_catalog$ALT)
# Calculation how many valid and non-valid snp do we have by:
# in REF and ALT column must be something, but not "no_data"
gwas_catalog %>%
summarise(non_valid_snp = subset(.,grepl(.$REF,pattern='-') | grepl(.$REF,pattern='no_data') | is.na(.$REF) |
grepl(.$ALT,pattern='-') | grepl(.$ALT,pattern='no_data') | is.na(.$ALT) |
is.na(.$COORDINATE)) %>% nrow(.),
valid_snp = nrow(.)-non_valid_snp,
total_snp = nrow(.))
# Filtering all valid SNPs to a dataframe
gwas_catalog %>%
filter(.,grepl(.$REF,pattern='-')==F & grepl(.$REF,pattern='no_data')==F & is.na(.$REF)==F &
grepl(.$ALT,pattern='-')==F & grepl(.$ALT,pattern='no_data')==F & is.na(.$ALT)==F &
is.na(.$COORDINATE)==F) -> gwas_catalog_filtered
# Creation of CHR column for typical LSEA input
gwas_catalog_filtered$CHR <- as.data.frame(str_split_fixed(gwas_catalog_filtered$Location,pattern = ":",Inf))[,1]
# Export gwas catalog snp for LSEA (total and separated by 25 selected phenotypes)
gwas_catalog_filtered %>% dplyr::select(c(CHR,COORDINATE,RSID,REF,ALT,PVAL)) %>% unique(.) -> gwas_catalog_filtered_lsea
# Task - working with repeated between the phenotypes SNPs
rep_gwas_snp <- as.data.frame(table(gwas_catalog_filtered$Variant_and_risk_allele)) %>%
filter(Freq != 1) %>% dplyr::rename(rep_SNP = Var1)
rep_gwas_snp$RSID <- gsub(rep_gwas_snp$rep_SNP,pattern = "-.*",replacement = "")
rep_gwas_snp <-
subset(gwas_catalog_filtered,Variant_and_risk_allele %in% rep_gwas_snp$rep_SNP) %>%
dplyr::select(RSID, REF, ALT, CHR,COORDINATE, PVAL,Mapped_gene,Reported_trait,Study_accession) %>%
plyr::join(.,rep_gwas_snp[,-1]) %>% dplyr::rename(Occurence_times_in_GwasCat = Freq) %>%
dplyr::arrange(RSID) %>%
filter(PVAL <= 1e-07)
rep_gwas_snp %>%
dplyr::group_by(RSID) %>%
dplyr::summarise(Reported_trait = paste(unique(Reported_trait), collapse = ", "),
Study_accession = paste(unique(Study_accession), collapse = ", ")) -> collapsed_rep
rep_gwas_snp_dedup <- rep_gwas_snp[!duplicated(rep_gwas_snp[c(1)]),][,-c(8,9)]
rep_gwas_snp_dedup <- plyr::join(rep_gwas_snp_dedup,collapsed_rep)
write.csv(rep_gwas_snp_dedup,"~/Documents/Bioinf/Git_BRB5/publication/repeated_GWAS_short_table.csv",row.names = F)
total %>%
dplyr::filter(total$pval <= 1e-07) -> total
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
total %>%
dplyr::filter(pval <= 1e-07) -> total
View(total)
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
total %>%
dplyr::filter(pval <= 1e-07) %>% select(-1) -> total
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
total %>%
dplyr::filter(pval <= 1e-07) %>% select(-1) -> total
total %>%
dplyr::filter(pval <= 1e-07) %>% dplyr::select(-1) -> total
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
#View(table(total$variant)) # all SNPs are unique for each phenotype
total %>%
dplyr::filter(pval <= 1e-07) %>% dplyr::select(-1) -> total
View(total)
total %>%
dplyr::filter(pval <= 1e-07) %>%  -> total
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
View(total)
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
total %>%
dplyr::filter(pval <= 1e-07) %>% dplyr::select(-1,4:12) -> total
View(total)
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
total %>%
dplyr::filter(pval <= 1e-07) %>% dplyr::select(-(1,4:12)) -> total
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
#View(table(total$variant)) # all SNPs are unique for each phenotype
total %>%
dplyr::filter(pval <= 1e-07) %>% dplyr::select(-c(1,4:12)) -> total
View(total)
total$CHR <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=2))[,1]
View(total)
total$COORDINATE <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=3))[,2]
View(total)
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
total %>%
dplyr::filter(pval <= 1e-07) %>%
dplyr::select(-c(1,4:12)) %>%
dplyr::rename(PVAL = pval) -> total
View(total)
total$CHR <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=2))[,1]
total$COORDINATE <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=3))[,2]
View(total)
total$CHR <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=2))[,1] %>% gsub(.,pattern = "X",replacement = 23)
total$COORDINATE <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=3))[,2]
View(total)
# -----------
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
View(total)
total %>%
dplyr::filter(pval <= 1e-07) %>%
dplyr::select(-c(1,5:12)) %>%
dplyr::rename(PVAL = pval) -> total
total$CHR <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=2))[,1] %>% gsub(.,pattern = "X",replacement = 23)
total$COORDINATE <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=3))[,2]
View(total)
colnames(total)
colnames(total)[2]
colnames(total)[2] <- "REF"
colnames(total)
total <- total[,-"minor_AF"]
total <- total[-"minor_AF"]
total <- total %>% dplyr::select(-minor_AF)
View(total)
colnames(total)
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
#View(table(total$variant)) # all SNPs are unique for each phenotype
total %>%
dplyr::filter(pval <= 1e-07) %>%
dplyr::select(-c(1,5:12)) %>%
dplyr::rename(PVAL = pval) -> total
total$CHR <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=2))[,1] %>% gsub(.,pattern = "X",replacement = 23)
total$COORDINATE <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=3))[,2]
# https://docs.google.com/spreadsheets/d/1kvPoupSzsSFBNSztMzl04xMoSC3Kcx3CrjVf4yBmESU/edit#gid=227859291
# it's written that Minor allele (equal to ref allele when AF > 0.5, otherwise equal to alt allele).
# in out dataset all of the MAF < 0.5 that Minor allele could be REF
colnames(total)[2] <- "REF"
total <- total %>% dplyr::select(-minor_AF) %>% dplyr::rename(UKB_dataset = Dataset)
View(total)
View(rep_gwas_snp_dedup)
View(total)
as.data.frame(str_split_fixed(total$variant,pattern = ":",n=Inf)) -> df
View(df)
as.data.frame(str_split_fixed(total$variant,pattern = ":",n=Inf)) %>% dplyr::rename(L = V3,R = V4)
as.data.frame(str_split_fixed(total$variant,pattern = ":",n=Inf)) %>% dplyr::rename(L = V3,R = V4) %>% dplyr::select(L,R) ->df
View(df)
as.data.frame(str_split_fixed(total$variant,pattern = ":",n=Inf)) %>% dplyr::rename(L = V3,R = V4) %>% dplyr::select(L,R) %>%
rbind(.,total) -> df
as.data.frame(str_split_fixed(total$variant,pattern = ":",n=Inf)) %>% dplyr::rename(L = V3,R = V4) %>% dplyr::select(L,R) %>%
cbind(.,total) -> df
View(df)
as.data.frame(str_split_fixed(total$variant,pattern = ":",n=Inf)) %>% dplyr::rename(L = V3,R = V4) %>% dplyr::select(L,R) %>%
cbind(.,total) -> total
rm(df)
total$ALT <- ifelse(total$REF==total$L,total$R,total$R)
View(total)
head(total)
total[1,1]
total[1,4]
total$ALT <- ifelse(total$REF==total$L,total$R,total$R)
total$ALT <- ifelse(total$REF==total$L,total$R,total$R)
str(total)
View(total)
as.data.frame(str_split_fixed(total$variant,pattern = ":",n=Inf)) %>% dplyr::rename(L = V3,R = V4) %>% dplyr::select(L,R) %>%
cbind(.,total) -> total
ifelse(total$REF==total$L,total$R,total$R)
total$REF
total$L
total$ALT <- ifelse(total$REF==total$L,total$R,total$L)
total$ALT <- ifelse(total$REF==total$L,total$R,total$L)
total$ALT <- ifelse(total$REF==total$L,total$R,total$L)
total$ALT <- ifelse(as.character(total$REF)==as.character(total$L),total$R,total$L)
View(total)
total$ALT <- ifelse(as.character(total$REF)==as.character(total$L),as.character(total$R),as.character(total$L))
View(total)
# UKB data processing (here we need to make tables for each phenotype)
total <- read.csv("total_ukbiobank_pregn.csv")
#View(table(total$variant)) # all SNPs are unique for each phenotype
total %>%
dplyr::filter(pval <= 1e-07) %>%
dplyr::select(-c(1,5:12)) %>%
dplyr::rename(PVAL = pval) -> total
total$CHR <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=2))[,1] %>% gsub(.,pattern = "X",replacement = 23)
total$COORDINATE <- as.data.frame(str_split_fixed(total$variant,pattern = ":",n=3))[,2]
# https://docs.google.com/spreadsheets/d/1kvPoupSzsSFBNSztMzl04xMoSC3Kcx3CrjVf4yBmESU/edit#gid=227859291
# it's written that Minor allele (equal to ref allele when AF > 0.5, otherwise equal to alt allele).
# in out dataset all of the MAF < 0.5 that Minor allele could be REF
colnames(total)[2] <- "REF"
total <- total %>% dplyr::select(-minor_AF) %>% dplyr::rename(UKB_dataset = Dataset)
as.data.frame(str_split_fixed(total$variant,pattern = ":",n=Inf)) %>% dplyr::rename(L = V3,R = V4) %>% dplyr::select(L,R) %>%
cbind(.,total) -> total
total$ALT <- ifelse(as.character(total$REF)==as.character(total$L),as.character(total$R),as.character(total$L))
View(total)
total %>% dplyr::select(-c(L,R)) -> total
View(total)
getwd()
setwd("~/Documents/Bioinf/Git_BRB5/publication/")
colnames(total)
setwd("~/Documents/Bioinf/Git_BRB5/publication/")
sapply(total$UKB_dataset,function(x){
data <- subset(total,total$UKB_dataset==x)
# removing 'bad' symbols for file names
full_name = paste0("ukb_",noquote(x),".csv",collapse = "")
write.csv(data[,c("variant","CHR","REF","ALT","COORDINATE","PVAL","UKB_dataset")],full_name,row.names = F)
})
